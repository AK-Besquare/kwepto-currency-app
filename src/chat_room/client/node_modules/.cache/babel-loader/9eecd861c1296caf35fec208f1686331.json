{"ast":null,"code":"import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ip from \"ip\";\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\"; // const SOCKET_SERVER_URL = \"http://192.168.100.157:4000\"; //TODO: change this to a dynamic setting\n\nconst SOCKET_SERVER_URL = \"http://\" + ip.address() + \":4000\";\n\nconst useChat = roomId => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: {\n        roomId\n      }\n    });\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, message => {\n      const incomingMessage = { ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id\n      };\n      setMessages(messages => [...messages, incomingMessage]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = messageBody => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id\n    });\n  };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\nexport default useChat;","map":{"version":3,"sources":["/home/adlinnur/test-repo/socket.io-react-hooks-chat/client/src/useChat.js"],"names":["useEffect","useRef","useState","socketIOClient","ip","NEW_CHAT_MESSAGE_EVENT","SOCKET_SERVER_URL","address","useChat","roomId","messages","setMessages","socketRef","current","query","on","message","incomingMessage","ownedByCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,MAAMC,sBAAsB,GAAG,gBAA/B,C,CACA;;AAEA,MAAMC,iBAAiB,GAAG,YAAYF,EAAE,CAACG,OAAH,EAAZ,GAA2B,OAArD;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMU,SAAS,GAAGX,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS,CAACC,OAAV,GAAoBV,cAAc,CAACG,iBAAD,EAAoB;AACpDQ,MAAAA,KAAK,EAAE;AAAEL,QAAAA;AAAF;AAD6C,KAApB,CAAlC;AAIAG,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqBV,sBAArB,EAA8CW,OAAD,IAAa;AACxD,YAAMC,eAAe,GAAG,EACtB,GAAGD,OADmB;AAEtBE,QAAAA,kBAAkB,EAAEF,OAAO,CAACG,QAAR,KAAqBP,SAAS,CAACC,OAAV,CAAkBO;AAFrC,OAAxB;AAIAT,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcO,eAAd,CAAf,CAAX;AACD,KAND;AAQA,WAAO,MAAM;AACXL,MAAAA,SAAS,CAACC,OAAV,CAAkBQ,UAAlB;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACZ,MAAD,CAhBM,CAAT;;AAkBA,QAAMa,WAAW,GAAIC,WAAD,IAAiB;AACnCX,IAAAA,SAAS,CAACC,OAAV,CAAkBW,IAAlB,CAAuBnB,sBAAvB,EAA+C;AAC7CoB,MAAAA,IAAI,EAAEF,WADuC;AAE7CJ,MAAAA,QAAQ,EAAEP,SAAS,CAACC,OAAV,CAAkBO;AAFiB,KAA/C;AAID,GALD;;AAOA,SAAO;AAAEV,IAAAA,QAAF;AAAYY,IAAAA;AAAZ,GAAP;AACD,CA9BD;;AAgCA,eAAed,OAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ip from \"ip\";\n\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\n// const SOCKET_SERVER_URL = \"http://192.168.100.157:4000\"; //TODO: change this to a dynamic setting\n\nconst SOCKET_SERVER_URL = \"http://\" + ip.address() + \":4000\";\n\nconst useChat = (roomId) => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId },\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n    });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;\n"]},"metadata":{},"sourceType":"module"}